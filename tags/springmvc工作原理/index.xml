<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SpringMVC工作原理 on fyzn12的博客</title>
    <link>https://fyzn12.github.io/tags/springmvc%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</link>
    <description>Recent content in SpringMVC工作原理 on fyzn12的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 02 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://fyzn12.github.io/tags/springmvc%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SpringBoot优点</title>
      <link>https://fyzn12.github.io/post/spring-boot/springboot-information/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fyzn12.github.io/post/spring-boot/springboot-information/</guid>
      <description> 1. SpringBoot简介 1.1 SpringBoot的优点  创建独立的Spring应用程序
 嵌入Tomcat、Jetty或者Undertow，无序部署WAR文件
 允许通过Maven来根据需要获取starter； 尽可能自动部署Spring； 提供生产就绪功能，如指标、健康检查和外部配置； 绝对没有代码生成，对XMl没有要求配置。
  1.2 传统SpringMVC和SpringBoot的对比 1.2.1 SpringMVC的工作原理  1.2.2 两者的对比 在传统的SpringMVC项目开发中，开发一个简易的SpringMVC项目，需要配置DispatcherServlet, 也需要配置SpringIoC的容器。你可以选择使用web.xml的配置来实现，当然，如果你使用的是 Servlet 3.1规范，也可以继承由SpringMVC提供的 AbstractAnnotationConfigDispatcherServletlnitializer来配置SpringMVC项目。 </description>
    </item>
    
  </channel>
</rss>